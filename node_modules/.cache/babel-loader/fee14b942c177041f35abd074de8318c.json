{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan David\\\\Desktop\\\\Portafolio profesional Blockchain\\\\JuegoDice\\\\DiceBet\\\\src\\\\components\\\\BuySellTokens2.js\";\nimport React, { Component } from 'react';\nimport smart_contract from '../abis/Dice.json';\nimport Web3 from 'web3';\nimport logo7 from '../logo7.png'; // import Swal from 'sweetalert2';\n\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Navbar';\nimport MyCarousel from './Carousel';\nimport { Container } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass howDoesItWorks extends Component {\n  async componentDidMount() {\n    // 1. Carga de Web3\n    await this.loadWeb3(); // 2. Carga de datos de la Blockchain\n\n    await this.loadBlockchainData();\n  } // 1. Carga de Web3\n\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log('Accounts: ', accounts);\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('¡Deberías considerar usar Metamask!');\n    }\n  } // 2. Carga de datos de la Blockchain\n\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    }); // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n\n    const networkId = await web3.eth.net.getId();\n    console.log('networkid:', networkId);\n    const networkData = smart_contract.networks[networkId];\n    console.log('NetworkData:', networkData);\n\n    if (networkData) {\n      const abi = smart_contract.abi;\n      console.log('abi', abi);\n      const address = networkData.address;\n      console.log('address:', address);\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        contract\n      });\n      this.setState({\n        contractAddress: address\n      });\n\n      const _ownerAddress = await contract.methods.owner().call();\n\n      this.setState({\n        ownerAddress: _ownerAddress\n      });\n\n      const _totalSupply = await contract.methods.totalSupply().call();\n\n      this.setState({\n        totalSupply: _totalSupply\n      });\n\n      const _balanceEthersSC = await contract.methods.balanceEthersSC().call();\n\n      this.setState({\n        balanceETH: _balanceEthersSC.toString()\n      });\n\n      const _symbol = await contract.methods.symbol().call();\n\n      this.setState({\n        symbol: _symbol\n      });\n    } else {\n      window.alert('¡El Smart Contract no se ha desplegado en la red!');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      account: '0x0',\n      loading: true,\n      contract: null,\n      errorMessage: \"\"\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"main\", {\n            role: \"main\",\n            className: \"col-lg-12 d-flex text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content mr-auto ml-auto w-75\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"HOLA MUNDO\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default howDoesItWorks;","map":{"version":3,"sources":["C:/Users/Juan David/Desktop/Portafolio profesional Blockchain/JuegoDice/DiceBet/src/components/BuySellTokens2.js"],"names":["React","Component","smart_contract","Web3","logo7","Row","Col","Navigation","MyCarousel","Container","howDoesItWorks","componentDidMount","loadWeb3","loadBlockchainData","window","ethereum","web3","accounts","request","method","console","log","currentProvider","alert","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","abi","address","contract","Contract","contractAddress","_ownerAddress","methods","owner","call","ownerAddress","_totalSupply","totalSupply","_balanceEthersSC","balanceEthersSC","balanceETH","toString","_symbol","symbol","constructor","props","state","loading","errorMessage","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport smart_contract from '../abis/Dice.json';\r\nimport Web3 from 'web3';\r\nimport logo7 from '../logo7.png';\r\n// import Swal from 'sweetalert2';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Navigation from './Navbar';\r\nimport MyCarousel from './Carousel';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nclass howDoesItWorks extends Component {\r\n\r\n    async componentDidMount() {\r\n        // 1. Carga de Web3\r\n        await this.loadWeb3()\r\n        // 2. Carga de datos de la Blockchain\r\n        await this.loadBlockchainData()\r\n    }\r\n\r\n    // 1. Carga de Web3\r\n    async loadWeb3() {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            console.log('Accounts: ', accounts)\r\n        }\r\n        else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('¡Deberías considerar usar Metamask!')\r\n        }\r\n    }\r\n\r\n    // 2. Carga de datos de la Blockchain\r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\r\n        const networkId = await web3.eth.net.getId()\r\n        console.log('networkid:', networkId)\r\n        const networkData = smart_contract.networks[networkId]\r\n        console.log('NetworkData:', networkData)\r\n\r\n        if (networkData) {\r\n            const abi = smart_contract.abi\r\n            console.log('abi', abi)\r\n            const address = networkData.address\r\n            console.log('address:', address)\r\n            const contract = new web3.eth.Contract(abi, address)\r\n            this.setState({ contract })\r\n            this.setState({ contractAddress: address })\r\n            const _ownerAddress = await contract.methods.owner().call()\r\n            this.setState({ ownerAddress: _ownerAddress })\r\n            const _totalSupply = await contract.methods.totalSupply().call()\r\n            this.setState({ totalSupply: _totalSupply })\r\n            const _balanceEthersSC = await contract.methods.balanceEthersSC().call()\r\n            this.setState({ balanceETH: _balanceEthersSC.toString() })\r\n            const _symbol = await contract.methods.symbol().call()\r\n            this.setState({ symbol: _symbol })\r\n        } else {\r\n            window.alert('¡El Smart Contract no se ha desplegado en la red!')\r\n        }\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0',\r\n            loading: true,\r\n            contract: null,\r\n            errorMessage: \"\"            \r\n\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navigation account={this.state.account} />\r\n                {/* <MyCarousel /> */}\r\n                <div className=\"container-fluid mt-5\">\r\n                    <div className=\"row\">\r\n                        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n                            <div className=\"content mr-auto ml-auto w-75\">\r\n\r\n                                <h1>HOLA MUNDO</h1>\r\n\r\n                            </div>\r\n                        </main>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default howDoesItWorks;\r\n"]},"metadata":{},"sourceType":"module"}