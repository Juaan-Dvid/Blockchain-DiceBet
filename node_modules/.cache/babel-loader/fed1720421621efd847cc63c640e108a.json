{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan David\\\\Desktop\\\\Portafolio profesional Blockchain\\\\JuegoDice\\\\DiceBet\\\\src\\\\components\\\\Dice.js\";\nimport React, { Component } from 'react';\nimport smart_contract from '../abis/Dice.json';\nimport Web3 from 'web3';\nimport logo1 from '../logo1.png';\nimport logo2 from '../logo2.png';\nimport logo3 from '../logo3.png';\nimport logo4 from '../logo4.png';\nimport logo5 from '../logo5.png';\nimport logo6 from '../logo6.png';\nimport Swal from 'sweetalert2';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Navigation from './Navbar'; // import MyCarousel from './Carousel';\n\nimport { Container } from 'react-bootstrap'; // import BuySellTokens from './BuySellTokens';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dice extends Component {\n  async componentDidMount() {\n    // 1. Carga de Web3\n    await this.loadWeb3(); // 2. Carga de datos de la Blockchain\n\n    await this.loadBlockchainData();\n  } // 1. Carga de Web3\n\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      console.log('Accounts: ', accounts);\n    } else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider);\n    } else {\n      window.alert('¡Deberías considerar usar Metamask!');\n    }\n  } // 2. Carga de datos de la Blockchain\n\n\n  async loadBlockchainData() {\n    const web3 = window.web3;\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    }); // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\n\n    const networkId = await web3.eth.net.getId();\n    console.log('networkid:', networkId);\n    const networkData = smart_contract.networks[networkId];\n    console.log('NetworkData:', networkData);\n\n    if (networkData) {\n      const abi = smart_contract.abi;\n      console.log('abi', abi);\n      const address = networkData.address;\n      console.log('address:', address);\n      const contract = new web3.eth.Contract(abi, address);\n      this.setState({\n        contract\n      });\n      let balanceTokens = await contract.methods.balanceTokens(this.state.account).call();\n      this.setState({\n        balanceTokens: balanceTokens.toString()\n      });\n    } else {\n      window.alert('¡El Smart Contract no se ha desplegado en la red!');\n    }\n  }\n\n  constructor(props) {\n    super(props);\n\n    this._bet1 = async _amountBet => {\n      try {\n        console.log(\"Apuesta al numero 1 en ejecucion\"); // const web3 = window.web3\n        // const ethers = web3.utils.toWei(_numTokens, 'ether')\n\n        await this.state.contract.methods.bet1(_amountBet).send({\n          from: this.state.account\n        });\n\n        const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call();\n\n        const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call();\n\n        const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call();\n\n        this.setState({\n          balanceTokens: _balance.toString()\n        });\n\n        if (_randomNumber === _selectedNumber) {\n          Swal.fire({\n            icon: 'success',\n            title: 'YOU WIN!',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: 'YOU LOSE',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        }\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._bet2 = async _amountBet => {\n      try {\n        console.log(\"Apuesta al numero 2 en ejecucion\"); // const web3 = window.web3\n        // const ethers = web3.utils.toWei(_numTokens, 'ether')\n\n        await this.state.contract.methods.bet2(_amountBet).send({\n          from: this.state.account\n        });\n\n        const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call();\n\n        const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call();\n\n        const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call();\n\n        this.setState({\n          balanceTokens: _balance.toString()\n        });\n\n        if (_randomNumber === _selectedNumber) {\n          Swal.fire({\n            icon: 'success',\n            title: 'YOU WIN!',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: 'YOU LOSE',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        }\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._bet3 = async _amountBet => {\n      try {\n        console.log(\"Apuesta al numero 3 en ejecucion\"); // const web3 = window.web3\n        // const ethers = web3.utils.toWei(_numTokens, 'ether')\n\n        await this.state.contract.methods.bet3(_amountBet).send({\n          from: this.state.account\n        });\n\n        const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call();\n\n        const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call();\n\n        const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call();\n\n        this.setState({\n          balanceTokens: _balance.toString()\n        });\n\n        if (_randomNumber === _selectedNumber) {\n          Swal.fire({\n            icon: 'success',\n            title: 'YOU WIN!',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: 'YOU LOSE',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        }\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._bet4 = async _amountBet => {\n      try {\n        console.log(\"Apuesta al numero 4 en ejecucion\"); // const web3 = window.web3\n        // const ethers = web3.utils.toWei(_numTokens, 'ether')\n\n        await this.state.contract.methods.bet4(_amountBet).send({\n          from: this.state.account\n        });\n\n        const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call();\n\n        const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call();\n\n        const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call();\n\n        this.setState({\n          balanceTokens: _balance.toString()\n        });\n\n        if (_randomNumber === _selectedNumber) {\n          Swal.fire({\n            icon: 'success',\n            title: 'YOU WIN!',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: 'YOU LOSE',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        }\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._bet5 = async _amountBet => {\n      try {\n        console.log(\"Apuesta al numero 5 en ejecucion\"); // const web3 = window.web3\n        // const ethers = web3.utils.toWei(_numTokens, 'ether')\n\n        await this.state.contract.methods.bet5(_amountBet).send({\n          from: this.state.account\n        });\n\n        const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call();\n\n        const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call();\n\n        const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call();\n\n        this.setState({\n          balanceTokens: _balance.toString()\n        });\n\n        if (_randomNumber === _selectedNumber) {\n          Swal.fire({\n            icon: 'success',\n            title: 'YOU WIN!',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: 'YOU LOSE',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        }\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this._bet6 = async _amountBet => {\n      try {\n        console.log(\"Apuesta al numero 6 en ejecucion\"); // const web3 = window.web3\n        // const ethers = web3.utils.toWei(_numTokens, 'ether')\n\n        await this.state.contract.methods.bet6(_amountBet).send({\n          from: this.state.account\n        });\n\n        const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call();\n\n        const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call();\n\n        const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call();\n\n        this.setState({\n          balanceTokens: _balance.toString()\n        });\n\n        if (_randomNumber === _selectedNumber) {\n          Swal.fire({\n            icon: 'success',\n            title: 'YOU WIN!',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        } else {\n          Swal.fire({\n            icon: 'warning',\n            title: 'YOU LOSE',\n            width: 800,\n            padding: '3em',\n            text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\n            backdrop: `\n                    rgba(15, 238, 168, 0.2)\n                    left top\n                    no-repeat                \n                    `\n          });\n        }\n      } catch (err) {\n        this.setState({\n          errorMessage: err\n        });\n      } finally {\n        this.setState({\n          loading: false\n        });\n      }\n    };\n\n    this.state = {\n      account: '0x0',\n      loading: false,\n      contract: null,\n      errorMessage: \"\",\n      inputText: '',\n      balanceTokens: '0'\n    };\n  }\n\n  render() {\n    let content;\n\n    if (this.state.loading) {\n      content = /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"loader\",\n        className: \"text-center\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 23\n      }, this);\n    } else {\n      content = this.state.balanceTokens;\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        account: this.state.account\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid mt-5\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"main\", {\n            role: \"main\",\n            className: \"col-lg-12 d-flex text-center\",\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"My balance: \", content, \" JDM\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 425,\n                      columnNumber: 46\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: [\"Bet \", /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      placeholder: \"Enter Amount to bet\",\n                      class: \"swal-input2\",\n                      value: this.state.inputText,\n                      onChange: e => this.setState({\n                        inputText: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 49\n                    }, this), \" JDM. You will get \", this.state.inputText * 2, \"  JDM\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 41\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Play now!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Which one will be?\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 41\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 432,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 433,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo1,\n                        onClick: () => this._bet1(this.state.inputText),\n                        alt: \"Imagen\",\n                        width: \"100%\",\n                        height: \"100%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo2,\n                        onClick: () => this._bet2(this.state.inputText),\n                        alt: \"Imagen\",\n                        width: \"100%\",\n                        height: \"100%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 438,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo3,\n                        onClick: () => this._bet3(this.state.inputText),\n                        alt: \"Imagen\",\n                        width: \"100%\",\n                        height: \"100%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 441,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 440,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 443,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 41\n                  }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo4,\n                        onClick: () => this._bet4(this.state.inputText),\n                        alt: \"Imagen\",\n                        width: \"100%\",\n                        height: \"100%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 450,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo5,\n                        onClick: () => this._bet5(this.state.inputText),\n                        alt: \"Imagen\",\n                        width: \"100%\",\n                        height: \"100%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 454,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 453,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: logo6,\n                        onClick: () => this._bet6(this.state.inputText),\n                        alt: \"Imagen\",\n                        width: \"100%\",\n                        height: \"100%\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 457,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 456,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 459,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 460,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 447,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Row, {\n                    children: /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                        children: \"Play the Dice and double your JDM tokens!\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 464,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 462,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Dice;","map":{"version":3,"sources":["C:/Users/Juan David/Desktop/Portafolio profesional Blockchain/JuegoDice/DiceBet/src/components/Dice.js"],"names":["React","Component","smart_contract","Web3","logo1","logo2","logo3","logo4","logo5","logo6","Swal","Row","Col","Navigation","Container","Dice","componentDidMount","loadWeb3","loadBlockchainData","window","ethereum","web3","accounts","request","method","console","log","currentProvider","alert","eth","getAccounts","setState","account","networkId","net","getId","networkData","networks","abi","address","contract","Contract","balanceTokens","methods","state","call","toString","constructor","props","_bet1","_amountBet","bet1","send","from","_randomNumber","idPersona_randomNumber","_selectedNumber","id_userNumber","_balance","fire","icon","title","width","padding","text","backdrop","err","errorMessage","loading","_bet2","bet2","_bet3","bet3","_bet4","bet4","_bet5","bet5","_bet6","bet6","inputText","render","content","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport smart_contract from '../abis/Dice.json';\r\nimport Web3 from 'web3';\r\nimport logo1 from '../logo1.png';\r\nimport logo2 from '../logo2.png';\r\nimport logo3 from '../logo3.png';\r\nimport logo4 from '../logo4.png';\r\nimport logo5 from '../logo5.png';\r\nimport logo6 from '../logo6.png';\r\nimport Swal from 'sweetalert2';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\n\r\nimport Navigation from './Navbar';\r\n// import MyCarousel from './Carousel';\r\nimport { Container } from 'react-bootstrap';\r\n// import BuySellTokens from './BuySellTokens';\r\n\r\nclass Dice extends Component {\r\n\r\n    async componentDidMount() {\r\n        // 1. Carga de Web3\r\n        await this.loadWeb3()\r\n        // 2. Carga de datos de la Blockchain\r\n        await this.loadBlockchainData()\r\n    }\r\n\r\n    // 1. Carga de Web3\r\n    async loadWeb3() {\r\n        if (window.ethereum) {\r\n            window.web3 = new Web3(window.ethereum)\r\n            const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            console.log('Accounts: ', accounts)\r\n        }\r\n        else if (window.web3) {\r\n            window.web3 = new Web3(window.web3.currentProvider)\r\n        }\r\n        else {\r\n            window.alert('¡Deberías considerar usar Metamask!')\r\n        }\r\n    }\r\n\r\n    // 2. Carga de datos de la Blockchain\r\n    async loadBlockchainData() {\r\n        const web3 = window.web3\r\n        const accounts = await web3.eth.getAccounts()\r\n        this.setState({ account: accounts[0] })\r\n        // Ganache -> 5777, Rinkeby -> 4, BSC -> 97\r\n        const networkId = await web3.eth.net.getId()\r\n        console.log('networkid:', networkId)\r\n        const networkData = smart_contract.networks[networkId]\r\n        console.log('NetworkData:', networkData)\r\n\r\n        if (networkData) {\r\n            const abi = smart_contract.abi\r\n            console.log('abi', abi)\r\n            const address = networkData.address\r\n            console.log('address:', address)\r\n            const contract = new web3.eth.Contract(abi, address)\r\n            this.setState({ contract })\r\n            let balanceTokens = await contract.methods.balanceTokens(this.state.account).call()\r\n            this.setState({ balanceTokens: balanceTokens.toString() })\r\n        } else {\r\n            window.alert('¡El Smart Contract no se ha desplegado en la red!')\r\n        }\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            account: '0x0',\r\n            loading: false,\r\n            contract: null,\r\n            errorMessage: \"\",\r\n            inputText: '',\r\n            balanceTokens: '0',\r\n        }\r\n    }\r\n\r\n\r\n    _bet1 = async (_amountBet) => {\r\n        try {\r\n            console.log(\"Apuesta al numero 1 en ejecucion\")\r\n            // const web3 = window.web3\r\n            // const ethers = web3.utils.toWei(_numTokens, 'ether')\r\n            await this.state.contract.methods.bet1(_amountBet).send({\r\n                from: this.state.account,\r\n            })\r\n            const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call()\r\n            const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call()\r\n            const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call()\r\n            this.setState({ balanceTokens: _balance.toString() })\r\n\r\n            if (_randomNumber === _selectedNumber) {\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'YOU WIN!',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'YOU LOSE',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    _bet2 = async (_amountBet) => {\r\n        try {\r\n            console.log(\"Apuesta al numero 2 en ejecucion\")\r\n            // const web3 = window.web3\r\n            // const ethers = web3.utils.toWei(_numTokens, 'ether')\r\n            await this.state.contract.methods.bet2(_amountBet).send({\r\n                from: this.state.account,\r\n            })\r\n\r\n            const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call()\r\n            const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call()\r\n            const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call()\r\n            this.setState({ balanceTokens: _balance.toString() })\r\n\r\n            if (_randomNumber === _selectedNumber) {\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'YOU WIN!',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'YOU LOSE',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    _bet3 = async (_amountBet) => {\r\n        try {\r\n            console.log(\"Apuesta al numero 3 en ejecucion\")\r\n            // const web3 = window.web3\r\n            // const ethers = web3.utils.toWei(_numTokens, 'ether')\r\n            await this.state.contract.methods.bet3(_amountBet).send({\r\n                from: this.state.account,\r\n            })\r\n\r\n            const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call()\r\n            const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call()\r\n            const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call()\r\n            this.setState({ balanceTokens: _balance.toString() })\r\n\r\n            if (_randomNumber === _selectedNumber) {\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'YOU WIN!',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'YOU LOSE',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    _bet4 = async (_amountBet) => {\r\n        try {\r\n            console.log(\"Apuesta al numero 4 en ejecucion\")\r\n            // const web3 = window.web3\r\n            // const ethers = web3.utils.toWei(_numTokens, 'ether')\r\n            await this.state.contract.methods.bet4(_amountBet).send({\r\n                from: this.state.account,\r\n            })\r\n\r\n            const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call()\r\n            const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call()\r\n            const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call()\r\n            this.setState({ balanceTokens: _balance.toString() })\r\n\r\n            if (_randomNumber === _selectedNumber) {\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'YOU WIN!',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'YOU LOSE',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    _bet5 = async (_amountBet) => {\r\n        try {\r\n            console.log(\"Apuesta al numero 5 en ejecucion\")\r\n            // const web3 = window.web3\r\n            // const ethers = web3.utils.toWei(_numTokens, 'ether')\r\n            await this.state.contract.methods.bet5(_amountBet).send({\r\n                from: this.state.account,\r\n            })\r\n\r\n            const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call()\r\n            const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call()\r\n            const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call()\r\n            this.setState({ balanceTokens: _balance.toString() })\r\n\r\n            if (_randomNumber === _selectedNumber) {\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'YOU WIN!',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'YOU LOSE',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n    _bet6 = async (_amountBet) => {\r\n        try {\r\n            console.log(\"Apuesta al numero 6 en ejecucion\")\r\n            // const web3 = window.web3\r\n            // const ethers = web3.utils.toWei(_numTokens, 'ether')\r\n            await this.state.contract.methods.bet6(_amountBet).send({\r\n                from: this.state.account,\r\n            })\r\n\r\n            const _randomNumber = await this.state.contract.methods.idPersona_randomNumber(this.state.account).call()\r\n            const _selectedNumber = await this.state.contract.methods.id_userNumber(this.state.account).call()\r\n            const _balance = await this.state.contract.methods.balanceTokens(this.state.account).call()\r\n            this.setState({ balanceTokens: _balance.toString() })\r\n\r\n            if (_randomNumber === _selectedNumber) {\r\n\r\n                Swal.fire({\r\n                    icon: 'success',\r\n                    title: 'YOU WIN!',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            } else {\r\n\r\n                Swal.fire({\r\n                    icon: 'warning',\r\n                    title: 'YOU LOSE',\r\n                    width: 800,\r\n                    padding: '3em',\r\n                    text: `The random number was ${_randomNumber}. You chose number ${_selectedNumber} `,\r\n                    backdrop: `\r\n                    rgba(15, 238, 168, 0.2)\r\n                    left top\r\n                    no-repeat                \r\n                    `\r\n                })\r\n\r\n            }\r\n\r\n        } catch (err) {\r\n            this.setState({ errorMessage: err })\r\n        } finally {\r\n            this.setState({ loading: false })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        let content\r\n        if (this.state.loading) {\r\n            content = <p id=\"loader\" className='text-center'>Loading...</p>\r\n        } else {\r\n            content = this.state.balanceTokens\r\n        }\r\n        return (\r\n            <div>\r\n                <Navigation account={this.state.account} />\r\n                <div className=\"container-fluid mt-5\">\r\n                    <div className=\"row\">\r\n                        <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\r\n                            {/* <div className=\"content mr-auto ml-auto\"> */}\r\n\r\n                            <Container>\r\n                                <Row>\r\n                                    {/* <Col className=\"justify-content-end\">\r\n                                            <h4 className=\"text-left\">\r\n                                                <p>My balance: {content} JDM</p>\r\n                                            </h4>\r\n                                        </Col> */}\r\n                                    <Col>\r\n\r\n                                        <h4 ><p>My balance: {content} JDM</p></h4>\r\n                                        <h5>Bet <input type=\"number\" placeholder='Enter Amount to bet' class='swal-input2' value={this.state.inputText} onChange={(e) => this.setState({ inputText: e.target.value })} /> JDM. You will get {this.state.inputText * 2}  JDM</h5>\r\n                                        &nbsp;\r\n                                        <h3>Play now!</h3>\r\n                                        <h3>Which one will be?</h3>\r\n                                        &nbsp;\r\n                                        <Row>\r\n                                            <Col></Col>\r\n                                            <Col></Col>\r\n                                            <Col>\r\n                                                <img src={logo1} onClick={() => this._bet1(this.state.inputText)} alt=\"Imagen\" width=\"100%\" height=\"100%\" />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <img src={logo2} onClick={() => this._bet2(this.state.inputText)} alt=\"Imagen\" width=\"100%\" height=\"100%\" />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <img src={logo3} onClick={() => this._bet3(this.state.inputText)} alt=\"Imagen\" width=\"100%\" height=\"100%\" />\r\n                                            </Col>\r\n                                            <Col></Col>\r\n                                            <Col></Col>\r\n                                        </Row>\r\n                                        &nbsp;\r\n                                        <Row>\r\n                                            <Col></Col>\r\n                                            <Col></Col>\r\n                                            <Col>\r\n                                                <img src={logo4} onClick={() => this._bet4(this.state.inputText)} alt=\"Imagen\" width=\"100%\" height=\"100%\" />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <img src={logo5} onClick={() => this._bet5(this.state.inputText)} alt=\"Imagen\" width=\"100%\" height=\"100%\" />\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <img src={logo6} onClick={() => this._bet6(this.state.inputText)} alt=\"Imagen\" width=\"100%\" height=\"100%\" />\r\n                                            </Col>\r\n                                            <Col></Col>\r\n                                            <Col></Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <h2>Play the Dice and double your JDM tokens!</h2>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                            {/* </div> */}\r\n                        </main>\r\n                    </div>\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dice;\r\n"]},"metadata":{},"sourceType":"module"}